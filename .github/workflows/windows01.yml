name: Windows Custom Build

on:
  push:
    branches: [ build, test ]
  workflow_dispatch:
    inputs:
      skip-resources:
        description: 'Skip resource replacement? (true/false)'
        required: false
        default: 'false'
      skip-menu:
        description: 'Skip menu modifications? (true/false)'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: windows-2022
    environment: build
    if: "!contains(github.event.head_commit.message, '[skip build]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip win]') && !contains(github.event.head_commit.message, '[skip win-tar]')"

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        architecture: 'x64'

    - name: Install global dependencies
      run: |
        npm install -g node-gyp
        npm install -g yarn
        
    - name: Install project dependencies
      run: |
        npm un node-pty serialport
        npm i
        npm i -S -E node-pty@1.1.0-beta14
        npm i -S -E serialport@13.0.0

    # ================= 彻底禁用帮助菜单 =================
    - name: Disable Help Menu Completely
      if: ${{ github.event_name != 'workflow_dispatch' || inputs.skip-menu == 'false' }}
      run: |
        # 1. 修改菜单文件 - 直接返回空菜单
        $menuFile = "src/app/lib/menu.js"
        $newMenuContent = @"
        const { Menu } = require('electron');
        
        // 返回空菜单 - 禁用所有菜单
        function buildMenu() {
          return Menu.buildFromTemplate([]);
        }
        
        module.exports = buildMenu;
        "@
        Set-Content -Path $menuFile -Value $newMenuContent
        
        # 2. 禁用菜单创建的调用点
        $appFile = "src/app/app.js"
        if (Test-Path $appFile) {
          (Get-Content $appFile) -replace "app\.on\('ready'.*?createWindow\(\);", "app.on('ready', () => { createWindow(); })" |
          Set-Content $appFile
          
          (Get-Content $appFile) -replace "const menu = buildMenu\(\);\s*Menu\.setApplicationMenu\(menu\);", "// 菜单已禁用" |
          Set-Content $appFile
        }
        
        # 3. 验证修改
        Write-Output "菜单系统已完全禁用"
        Get-Content $menuFile
        
    # ================= 强制清理缓存 =================
    - name: Clean Cache
      run: |
        # 清理 npm 缓存
        npm cache clean --force
        
        # 删除可能存在的缓存目录
        Remove-Item -Recurse -Force ~\AppData\Local\electron\Cache -ErrorAction SilentlyContinue
        Remove-Item -Recurse -Force ~\AppData\Roaming\electerm -ErrorAction SilentlyContinue
        Remove-Item -Recurse -Force node_modules\.cache -ErrorAction SilentlyContinue
        
        # 重新安装依赖确保干净
        npm install
        
    # ================= 资源替换步骤 =================
    - name: Replace resources
      if: ${{ github.event_name != 'workflow_dispatch' || inputs.skip-resources == 'false' }}
      run: |
        # 创建资源目录
        New-Item -ItemType Directory -Path custom-resources -Force
        
        # 替换核心资源包
        if (Test-Path "custom-resources/electerm-resource") {
          Write-Output "替换完整资源包..."
          Remove-Item -Recurse -Force node_modules/@electerm/electerm-resource -ErrorAction SilentlyContinue
          Copy-Item -Recurse custom-resources/electerm-resource node_modules/@electerm/
        }
        
        # 替换水印图
        if (Test-Path "custom-resources/watermark.png") {
          Write-Output "替换水印图..."
          Copy-Item -Force custom-resources/watermark.png node_modules/@electerm/electerm-resource/res/imgs/electerm-watermark.png
        }
        
        # 替换加载Logo
        if (Test-Path "custom-resources/logo.png") {
          Write-Output "替换加载Logo..."
          Copy-Item -Force custom-resources/logo.png node_modules/@electerm/electerm-resource/res/imgs/electerm.png
        }
        
        # 替换托盘图标
        if (Test-Path "custom-resources/tray-icons") {
          Write-Output "替换托盘图标..."
          Copy-Item -Recurse -Force custom-resources/tray-icons/* node_modules/@electerm/electerm-resource/tray-icons/
        }
        
        # 替换应用图标
        if (Test-Path "custom-resources/icons") {
          Write-Output "替换应用图标..."
          Copy-Item -Recurse -Force custom-resources/icons/* build/icons/
        }
        
    # ================= 更新页面标题 =================
    - name: Update Page Title
      run: |
        $indexPugFile = "src/client/views/index.pug"
        if (Test-Path $indexPugFile) {
          (Get-Content $indexPugFile) -replace "title #{siteName}", "title 您的公司终端" |
          Set-Content $indexPugFile
        }
        
    # ================= 编译步骤 =================
    - name: Build application
      run: npm run b
      
    - name: Create Windows installer
      if: "!contains(github.event.head_commit.message, 'skip build')"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BUILD_NUMBER: ${{ secrets.BUILD_NUMBER }}
        CUSTOM_UPLOAD_URL: ${{ secrets.CUSTOM_UPLOAD_URL }}
      run: node build/bin/build-win-tar
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electerm-installer
        path: dist/*.tar.gz
